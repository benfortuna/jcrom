#summary Using filters to control which nodes to load/update.
#labels Phase-Implementation

== Using filters ==

There are times when you don't want to load/update some/any child nodes. For example, we may want to list all the weblog entries, but without loading the comments for each entry. JCROM supports this with two parameters that can be used in the Jcrom.fromNode() and Jcrom.updateNode() methods:

  * _childNameFilter_ - this is a comma separated string with the names of children to include or exclude.

    * "comments" will include only the comments children
    * "-comments" will include everything but the comments children
    * star will include all children
    * "none" will exclude all children

  * _maxDepth_ - the maximum depth of included child nodes (0 means no child nodes are loaded, while a negative value means that no restrictions are set on the depth).

So, to load a weblog entry without the comments, we would do:

{{{
Session session = ...;
String weblogEntryName = ...;

try {
    Node weblogEntryNode = session.getRootNode()
        .getNode("Weblog").getNode(weblogEntryName);
    WeblogEntry weblogEntry 
        = jcrom.fromNode(WeblogEntry.class, weblogEntryNode, "-comments", -1);
} finally {
    session.logout();
}
}}}

In much the same way, sometimes we do not want to update the child nodes when updating a parent. For example, if we need to update the body property of the WeblogEntry, then there is no need to update all the comment child nodes. Therefore, the Jcrom.updateNode() methods accept the filter arguments as well.